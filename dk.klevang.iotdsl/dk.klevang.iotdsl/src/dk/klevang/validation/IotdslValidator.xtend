/*
 * generated by Xtext 2.20.0
 */
package dk.klevang.validation

import org.eclipse.xtext.validation.Check
import dk.klevang.iotdsl.Condition
import dk.klevang.iotdsl.Board
import java.util.HashSet

/** 
 * This class contains custom validation rules. 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class IotdslValidator extends AbstractIotdslValidator {
	// public static final INVALID_NAME = 'invalidName'
	//
	// @Check
	// public void checkGreetingStartsWithCapital(Greeting greeting) {
	// if (!Character.isUpperCase(greeting.getName().charAt(0))) {
	// warning("Name should start with a capital",
	// IotdslPackage.Literals.GREETING__NAME,
	// INVALID_NAME);
	// }
	// }
	@Check def void checkCondition(Condition condition) 
	{
//		if (condition.getBoolExp() !== null) 
//		{
//			warning("fix your shiet", condition.boolExp, null)
//		} 
//		else 
//		{
//			println("Det går bare skie godt")
//		}
	}
	
	@Check def void checkForCyclicInheritance(Board board)
	{
		var seen = new HashSet<Board>
		seen.add(board)
		
		checkParent(board.extension.parent, seen)
	}
	
	def void checkParent(Board parent, HashSet<Board> seen)
	{
		if (parent === null)
		{
			return
		}
		if (seen.contains(parent))
		{
			error("Cyclic inheritance not allowed.", parent.extension, null)
			return
		}
		seen.add(parent)
		checkParent(parent.extension.parent, seen)
	}
}







