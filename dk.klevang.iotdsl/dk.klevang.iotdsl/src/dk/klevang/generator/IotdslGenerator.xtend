/*
 * generated by Xtext 2.20.0
 */
package dk.klevang.generator

import org.eclipse.emf.ecore.resource.Resource


import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import java.util.ArrayList
import dk.klevang.iotdsl.Board
import dk.klevang.iotdsl.WebServer
import dk.klevang.auxil.ExtensionHandler

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class IotdslGenerator extends AbstractGenerator {

	val configGenerator = new ConfigGenerator
	val pycomGenerator = new PycomGenerator
	val esp32Generator = new Esp32Generator
	val webServerGenerator = new WebserverGenerator
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) 
	{
		var boards = resource.allContents.filter(Board).toList
		var webServers = resource.allContents.filter(WebServer).toList
		
		
		println("--- BEFORE ---")
		for (board : boards)
		{
			println("Name: " + board.name)
			for (sensor : board.sensors)
			{
				println("Sensor: " + sensor.name)
			}
			println("Has internet? - " + board.internet)
			println("\n----\n")
		}
		println("--- BEFORE END ---")
		
		
		for (Board board : boards)
		{
			if (board.extension !== null)
			{
				ExtensionHandler.prepareExtendedBoard(board)
			}
		}
		
		println("--- AFTER ---")
		for (board : boards)
		{
			println("Name: " + board.name)
			for (sensor : board.sensors)
			{
				println("Sensor: " + sensor.name)
			}
			println("Has internet? - " + board.internet)
			println("----")
		}
		println("--- AFTER END ---")
		pycomGenerator.generateFiles(boards, fsa)
		esp32Generator.generateFiles(boards, fsa)
		configGenerator.generateFiles(boards, webServers, fsa)
		webServerGenerator.generateFiles(webServers, fsa)
	}
}
